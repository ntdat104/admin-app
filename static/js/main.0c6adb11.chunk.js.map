{"version":3,"sources":["components/Login.js","api/FirebaseConfig.js","components/SearchBox.js","components/RenderStudent.js","components/AddForm.js","components/EditForm.js","components/Admin.js","App.js","index.js"],"names":["Login","e","target","value","type","checked","name","this","setState","preventDefault","account","username","state","toLowerCase","password","props","checkAdmin","className","onSubmit","handleSubmit","id","onChange","handleChange","autoComplete","required","htmlFor","Component","FirebaseConfig","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","SearchBox","trim","getUsernameSearch","placeholder","RenderStudent","stt","student","fullname","gender","class","count","mark","onClick","changeEditStatus","removeStudent","AddForm","parseInt","addStudent","EditForm","studentEditing","editStudent","defaultValue","Admin","searchStatus","userSearch","addStatus","editStatus","removeStatus","ref","on","data","students","forEach","push","key","val","listStudent","filter","indexOf","map","index","set","child","remove","changeAddStatus","mapStudent","checkAddStatus","checkEditStatus","App","login","alert","checkLoginStatus","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0c6adb11.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport \"../css/Login.css\";\r\n\r\nclass Login extends Component {\r\n    handleChange(e) {\r\n        const target = e.target;\r\n        const value = target.type === \"checkbox\" ? target.checked : target.value;\r\n        const name = target.name;\r\n\r\n        this.setState({\r\n            [name]: value,\r\n        });\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        let account = {\r\n            username: this.state.username.toLowerCase(),\r\n            password: this.state.password.toLowerCase()\r\n        }\r\n        this.props.checkAdmin(account);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"login\">\r\n                <form className=\"login_form\" onSubmit={(e) => this.handleSubmit(e)}>\r\n                    <h1>Lớp Anh Đạt</h1>\r\n                    <div className=\"input-group\">\r\n                        <input name=\"username\" type=\"text\" id=\"username\" onChange={(e) => this.handleChange(e)} autoComplete=\"Off\" required/>\r\n                        <label htmlFor=\"username\">Username</label>\r\n                    </div>\r\n                    <div className=\"input-group\">\r\n                        <input name=\"password\" type=\"password\" id=\"password\" onChange={(e) => this.handleChange(e)} autoComplete=\"Off\" required/>\r\n                        <label htmlFor=\"password\">Password</label>\r\n                    </div>\r\n                    <button type=\"submit\">Login</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","import * as firebase from \"firebase\";\r\n\r\nconst Config = {\r\n  apiKey: \"AIzaSyBtILF8Dzs7mVGrTLiQ8cnhKz0mqs26Bhk\",\r\n  authDomain: \"reactproject-104.firebaseapp.com\",\r\n  databaseURL: \"https://reactproject-104.firebaseio.com\",\r\n  projectId: \"reactproject-104\",\r\n  storageBucket: \"reactproject-104.appspot.com\",\r\n  messagingSenderId: \"26150205556\",\r\n  appId: \"1:26150205556:web:da9c7bef6ff418c697b921\",\r\n  measurementId: \"G-RBVTEECYN0\",\r\n};\r\n\r\nexport const FirebaseConfig = firebase.initializeApp(Config);","import React, { Component } from 'react';\r\nimport \"../css/SearchBox.css\";\r\n\r\nclass SearchBox extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: \"\"\r\n        }\r\n    }\r\n    \r\n    handleChange(e) {\r\n        this.setState({\r\n            username: e.target.value.trim().toLowerCase()\r\n        });\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        this.props.getUsernameSearch(this.state.username);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"search-box\" onSubmit={(e) => this.handleSubmit(e)}>\r\n                <label htmlFor=\"search\">Tìm kiếm</label>\r\n                <input type=\"text\" id=\"search\" placeholder=\"username\" onChange={(e) => this.handleChange(e)}/>\r\n                <button type=\"submit\">Search</button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchBox;","import React, { Component } from 'react';\r\n\r\nclass RenderStudent extends Component {\r\n    render() {\r\n        return (\r\n            <tr>\r\n                <td>{this.props.stt}</td>\r\n                <td>{this.props.student.username}</td>\r\n                <td>{this.props.student.password}</td>\r\n                <td>{this.props.student.fullname}</td>\r\n                <td>{this.props.student.gender === 0 ? \"Nam\" : \"Nữ\"}</td>\r\n                <td>{this.props.student.class}</td>\r\n                <td>{this.props.student.count}</td>\r\n                <td>{this.props.student.mark}</td>\r\n                <td>\r\n                    <button onClick={() => this.props.changeEditStatus()}>Sửa</button>\r\n                    <button onClick={() => this.props.removeStudent()}>Xóa</button>\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RenderStudent;","import React, { Component } from 'react';\r\nimport \"../css/AddForm.css\";\r\n\r\nclass AddForm extends Component {\r\n    handleChange(e) {\r\n        const target = e.target;\r\n        const value = target.type === \"checkbox\" ? target.checked : target.value;\r\n        const name = target.name;\r\n        this.setState({\r\n            [name]: value,\r\n        });\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        let student = {\r\n            username: this.state.username.toLowerCase(),\r\n            password: this.state.password.toLowerCase(),\r\n            fullname: this.state.fullname,\r\n            gender: parseInt(this.state.gender),\r\n            class: this.state.class,\r\n            count: this.state.count,\r\n            mark: this.state.mark\r\n        };\r\n        this.props.addStudent(student);\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <form className=\"add_form\" onSubmit={(e) => this.handleSubmit(e)}>\r\n                <h1>Thêm học sinh</h1>\r\n                <div className=\"form_group\">\r\n                    <label htmlFor=\"username\">Username</label>\r\n                    <input name=\"username\" id=\"username\" type=\"text\" onChange={(e) => this.handleChange(e)} autoComplete=\"off\" required/> \r\n                </div>\r\n                <div className=\"form_group\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input name=\"password\" id=\"password\" type=\"password\" onChange={(e) => this.handleChange(e)} autoComplete=\"off\" required/>\r\n                </div>\r\n                <div className=\"form_group\">\r\n                    <label htmlFor=\"fullname\">Họ tên</label>\r\n                    <input name=\"fullname\" id=\"fullname\" type=\"text\" onChange={(e) => this.handleChange(e)} autoComplete=\"off\" required/>\r\n                </div>\r\n                <div className=\"form_group\">\r\n                    <label htmlFor=\"class\">Lớp</label>\r\n                    <input name=\"class\" id=\"class\" type=\"text\" onChange={(e) => this.handleChange(e)} autoComplete=\"off\" required/>\r\n                </div>\r\n                <div className=\"form_group\">\r\n                    <label htmlFor=\"count\">Số buổi học</label>\r\n                    <input name=\"count\" id=\"count\" type=\"number\" onChange={(e) => this.handleChange(e)} autoComplete=\"off\" required/>\r\n                </div>\r\n                <div className=\"form_group\">\r\n                    <label htmlFor=\"mark\">Điểm</label>\r\n                    <input name=\"mark\" id=\"mark\" type=\"text\" onChange={(e) => this.handleChange(e)} autoComplete=\"off\" required/>\r\n                </div>\r\n                <div className=\"form_group\">\r\n                    <label htmlFor=\"gender\">Giới tính</label>\r\n                    <select name=\"gender\" id=\"gender\" onChange={(e) => this.handleChange(e)} autoComplete=\"off\" required>\r\n                        <option value=\"\">Chọn giới tính</option>\r\n                        <option value={0}>Nam</option>\r\n                        <option value={1}>Nữ</option>\r\n                    </select>\r\n                </div>\r\n                <div className=\"form_btn\">\r\n                    <button type=\"submit\">Submit</button>\r\n                    <button type=\"reset\">Reset</button>\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddForm;","import React, { Component } from 'react';\r\nimport \"../css/EditForm.css\";\r\n\r\nclass EditForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n    \r\n    handleChange(e) {\r\n        const target = e.target;\r\n        const value = target.type === \"checkbox\" ? target.checked : target.value;\r\n        const name = target.name;\r\n        this.setState({\r\n            [name]: value,\r\n        });\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        let student = {\r\n            username: this.state.username ? this.state.username : this.props.studentEditing.username,\r\n            password: this.state.password ? this.state.password : this.props.studentEditing.password,\r\n            fullname: this.state.fullname ? this.state.fullname : this.props.studentEditing.fullname,\r\n            gender: parseInt(this.state.gender ? this.state.gender : this.props.studentEditing.gender),\r\n            class: this.state.class ? this.state.class : this.props.studentEditing.class,\r\n            count: this.state.count ? this.state.count : this.props.studentEditing.count,\r\n            mark: this.state.mark ? this.state.mark : this.props.studentEditing.mark\r\n        }\r\n        this.props.editStudent(student)\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <form className=\"edit_form\" onSubmit={(e) => this.handleSubmit(e)}>\r\n                <h1>Sửa học sinh</h1>\r\n                <div className=\"form_group\">\r\n                    <label htmlFor=\"username\">Username</label>\r\n                    <input name=\"username\" defaultValue={this.props.studentEditing.username} id=\"username\" type=\"text\" onChange={(e) => this.handleChange(e)} autoComplete=\"off\" required/> \r\n                </div>\r\n                <div className=\"form_group\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input name=\"password\" defaultValue={this.props.studentEditing.password} id=\"password\" type=\"password\" onChange={(e) => this.handleChange(e)} autoComplete=\"off\" required/>\r\n                </div>\r\n                <div className=\"form_group\">\r\n                    <label htmlFor=\"fullname\">Họ tên</label>\r\n                    <input name=\"fullname\" defaultValue={this.props.studentEditing.fullname} id=\"fullname\" type=\"text\" onChange={(e) => this.handleChange(e)} autoComplete=\"off\" required/>\r\n                </div>\r\n                <div className=\"form_group\">\r\n                    <label htmlFor=\"class\">Lớp</label>\r\n                    <input name=\"class\" defaultValue={this.props.studentEditing.class} id=\"class\" type=\"text\" onChange={(e) => this.handleChange(e)} autoComplete=\"off\" required/>\r\n                </div>\r\n                <div className=\"form_group\">\r\n                    <label htmlFor=\"count\">Số buổi học</label>\r\n                    <input name=\"count\" defaultValue={this.props.studentEditing.count} id=\"count\" type=\"number\" onChange={(e) => this.handleChange(e)} autoComplete=\"off\" required/>\r\n                </div>\r\n                <div className=\"form_group\">\r\n                    <label htmlFor=\"mark\">Điểm</label>\r\n                    <input name=\"mark\" defaultValue={this.props.studentEditing.mark} id=\"mark\" type=\"text\" onChange={(e) => this.handleChange(e)} autoComplete=\"off\" required/>\r\n                </div>\r\n                <div className=\"form_group\">\r\n                    <label htmlFor=\"gender\">Giới tính</label>\r\n                    <select name=\"gender\" defaultValue={this.props.studentEditing.gender} id=\"gender\" onChange={(e) => this.handleChange(e)} autoComplete=\"off\" required>\r\n                        <option value=\"\">Chọn giới tính</option>\r\n                        <option value={0}>Nam</option>\r\n                        <option value={1}>Nữ</option>\r\n                    </select>\r\n                </div>\r\n                <div className=\"form_btn\">\r\n                    <button type=\"submit\">Save</button>\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditForm;","import React, { Component } from 'react';\r\nimport { FirebaseConfig } from \"../api/FirebaseConfig\";\r\nimport * as firebase from \"firebase\";\r\nimport \"../css/Admin.css\";\r\nimport SearchBox from './SearchBox';\r\nimport RenderStudent from './RenderStudent';\r\nimport AddForm from './AddForm';\r\nimport EditForm from './EditForm';\r\n\r\nclass Admin extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            FirebaseConfig: FirebaseConfig,\r\n\r\n            searchStatus: false,\r\n            userSearch: null,\r\n\r\n            addStatus: false,\r\n\r\n            editStatus: false,\r\n            studentEditing: null,\r\n\r\n            removeStatus: false,\r\n        }\r\n    }\r\n    \r\n    UNSAFE_componentWillMount(){\r\n        const data = firebase.database().ref(\"students\");\r\n        data.on(\"value\", (data) => {\r\n            let students = [];\r\n            data.forEach((student) => {\r\n                students.push({\r\n                    username: student.key,\r\n                    password: student.val().password,\r\n                    fullname: student.val().fullname,\r\n                    gender: parseInt(student.val().gender),\r\n                    class: student.val().class,\r\n                    count: student.val().count,\r\n                    mark: student.val().mark,\r\n                })\r\n            });\r\n            this.setState({\r\n                students: students\r\n            });\r\n        })\r\n    }\r\n\r\n    //* SearchBox\r\n    getUsernameSearch(username){\r\n        if(username !== \"\"){\r\n            let listStudent = this.state.students.filter((student) => student.username.indexOf(username) !== -1);\r\n            this.setState({\r\n                searchStatus: true,\r\n                userSearch: listStudent\r\n            });\r\n        } else {\r\n            this.setState({\r\n                searchStatus: false,\r\n                userSearch: null\r\n            });\r\n        }\r\n    }\r\n\r\n    mapStudent(){\r\n        if(this.state.searchStatus) {\r\n            return this.state.userSearch.map((student, index) => (\r\n                <RenderStudent\r\n                    key={index}\r\n                    stt={index + 1}\r\n                    student={student}\r\n                    changeEditStatus={() => this.changeEditStatus(student)}\r\n                    removeStudent={() => this.removeStudent(student)}\r\n                />\r\n            ))\r\n        }\r\n        \r\n        if(this.state.students) {\r\n            return this.state.students.map((student, index) => (\r\n                <RenderStudent\r\n                    key={index}\r\n                    stt={index + 1}\r\n                    student={student}\r\n                    changeEditStatus={() => this.changeEditStatus(student)}\r\n                    removeStudent={() => this.removeStudent(student)}\r\n                />\r\n            ))\r\n        }\r\n    }\r\n\r\n    //* AddForm\r\n    changeAddStatus(){\r\n        this.setState({\r\n            addStatus: !this.state.addStatus\r\n        });\r\n    }\r\n\r\n    checkAddStatus(){\r\n        if(this.state.addStatus){\r\n            return <AddForm addStudent={(student) => this.addStudent(student)}/>\r\n        }\r\n    }\r\n\r\n    addStudent(student){\r\n        const data = firebase.database().ref(\"students/\" + student.username);\r\n        data.set(student);\r\n        this.setState({\r\n            addStatus: !this.state.addStatus\r\n        });\r\n    }\r\n\r\n    //* EditForm\r\n    changeEditStatus(student){\r\n        this.setState({\r\n            editStatus: !this.state.editStatus,\r\n            studentEditing: student\r\n        });\r\n    }\r\n\r\n    checkEditStatus(){\r\n        if(this.state.editStatus){\r\n            return <EditForm studentEditing={this.state.studentEditing} editStudent={(student) => this.editStudent(student)}/>\r\n        }\r\n    }\r\n\r\n    editStudent(student){\r\n        const data = firebase.database().ref(\"students/\" + student.username);\r\n        data.set(student);\r\n        this.setState({\r\n            editStatus: !this.state.editStatus,\r\n            studentEditing: null\r\n        });\r\n    }\r\n\r\n    //* RemoveButton\r\n    removeStudent(student){\r\n        const data = firebase.database().ref(\"students\");\r\n        data.child(student.username).remove();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"admin\">\r\n                <h1>Welcome to admin</h1>\r\n                <SearchBox getUsernameSearch={(username) => this.getUsernameSearch(username)}/>\r\n                <button className=\"add_button\" onClick={() => this.changeAddStatus()}>Thêm mới</button>\r\n                <table className=\"admin_table\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <th>STT</th>\r\n                            <th>Username</th>\r\n                            <th>Password</th> \r\n                            <th>Họ tên</th>\r\n                            <th>Giới tính</th>\r\n                            <th>Lớp</th>\r\n                            <th>Số buổi học</th>\r\n                            <th>Điểm</th>\r\n                            <th>Chức năng</th>\r\n                        </tr>\r\n                        {this.mapStudent()}\r\n                    </tbody>\r\n                </table>\r\n                {this.checkAddStatus()}\r\n                {this.checkEditStatus()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Admin;","import React, { Component } from \"react\";\r\nimport Login from \"./components/Login\";\r\nimport Admin from \"./components/Admin\";\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      login: false,\r\n    };\r\n  }\r\n\r\n  //* Login\r\n  checkLoginStatus() {\r\n    if (this.state.login) {\r\n      return <Admin />;\r\n    }\r\n    return <Login checkAdmin={(account) => this.checkAdmin(account)} />;\r\n  }\r\n\r\n  checkAdmin(account) {\r\n    if (account.username !== \"admin\") {\r\n      alert(\"Tài khoản không tồn tại!\");\r\n    } else if (account.password !== \"abc123\") {\r\n      alert(\"Sai mật khẩu!\");\r\n    } else {\r\n      alert(\"Đăng nhập thành công!\");\r\n      this.setState({\r\n        login: true,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        {this.checkLoginStatus()}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}